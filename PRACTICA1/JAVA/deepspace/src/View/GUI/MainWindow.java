/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View.GUI;

import controller.Controller;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author celia
 */
public class MainWindow extends javax.swing.JFrame implements View.DeepSpaceView {
    private static MainWindow instance = null;
    private StationView stationView;
    private EnemyView enemyView;
    
    
    public static MainWindow getInstance(){
        if (instance == null)
            instance = new MainWindow();
        return instance;
    }
    /**
     * Creates new form MainWindow
     */
    private MainWindow() {
        initComponents();
        
        stationView = new StationView();
        enemyView = new EnemyView();
        panelSpaceStation.add(stationView);
        panelEnemy.add(enemyView);
        setTitle ("Deepspace");
        repaint();
        setLocationRelativeTo(null);
        
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
        @Override
        public void windowClosing(java.awt.event.WindowEvent e) {
            controller.Controller.getInstance().finish(0);
        }
});
    }

    public void updateView(){
        stationView.setStation(Controller.getInstance().getUIversion().getCurrentStation());
        enemyView.setEnemy(Controller.getInstance().getUIversion().getCurrentEnemy());
       // jbSpendChecks.setEnabled(Controller.getInstance().getAppState() == AppState.PERSONCANSPEND);
       
    }
    
    public void showView(){
        this.setVisible(true);
    }
    
    
    
    //HACER
    @Override
    public ArrayList<String> readNamePlayers() {
        NamesCapture namesCapt = new NamesCapture(this);
        ArrayList<String> names = namesCapt.getNames();
        return names;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPruebas = new javax.swing.JPanel();
        panelSpaceStation = new javax.swing.JPanel();
        panelEnemy = new javax.swing.JPanel();
        botonDescartar = new javax.swing.JButton();
        botonDescartarHangar = new javax.swing.JButton();
        botonSiguienteTurno = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        botonCombatir = new javax.swing.JButton();
        botonEquipar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonDescartar.setText("Descartar");
        botonDescartar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDescartarActionPerformed(evt);
            }
        });

        botonDescartarHangar.setText("Descartar Hangar");
        botonDescartarHangar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDescartarHangarActionPerformed(evt);
            }
        });

        botonSiguienteTurno.setText("Siguiente Turno");
        botonSiguienteTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSiguienteTurnoActionPerformed(evt);
            }
        });

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        botonCombatir.setText("Combatir!");
        botonCombatir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCombatirActionPerformed(evt);
            }
        });

        botonEquipar.setText("Equipar");
        botonEquipar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEquiparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(panelPruebas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelSpaceStation, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(botonEquipar)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(botonDescartar)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonCombatir)
                            .addGap(7, 7, 7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(botonSalir)
                                .addComponent(botonDescartarHangar))
                            .addGap(84, 84, 84)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(panelEnemy, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(botonSiguienteTurno)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelSpaceStation, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 261, Short.MAX_VALUE)
                        .addComponent(panelPruebas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelEnemy, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botonDescartar)
                        .addGap(18, 18, 18)
                        .addComponent(botonSiguienteTurno)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(botonDescartarHangar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonSalir))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(botonCombatir)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonEquipar)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCombatirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCombatirActionPerformed
        Controller.getInstance().combat();
        updateView();
    }//GEN-LAST:event_botonCombatirActionPerformed

    private void botonEquiparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEquiparActionPerformed
        Controller.getInstance().mount(stationView.getSelectedHangarWeapons(), stationView.getSelectedHangarShields());
        updateView();
    }//GEN-LAST:event_botonEquiparActionPerformed

    private void botonSiguienteTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSiguienteTurnoActionPerformed
        Controller.getInstance().nextTurn();
        updateView();
    }//GEN-LAST:event_botonSiguienteTurnoActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        Controller.getInstance().finish(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void botonDescartarHangarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDescartarHangarActionPerformed
        Controller.getInstance().discardHangar();
        updateView();
    }//GEN-LAST:event_botonDescartarHangarActionPerformed

    private void botonDescartarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDescartarActionPerformed
       // Controller.getInstance().discard(ALLBITS, weapons, shields);
    }//GEN-LAST:event_botonDescartarActionPerformed

    
    @Override
    public boolean confirmExitMessage() {
        return (JOptionPane.showConfirmDialog(this, "¿Estás segur@ que deseas salir?", "Deepspace", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);
    }
    
  public void nextTurnNotAllowedMessage(){
      JOptionPane.showMessageDialog(this, "\n No puedes avanzar de turno, no has cumplido tu castigo", "Deepspace", JOptionPane.INFORMATION_MESSAGE);
  }
  public void lostCombatMessage(){
    JOptionPane.showMessageDialog(this, "Has PERDIDO el combate. \tCumple tu castigo.", "Deepspace", JOptionPane.INFORMATION_MESSAGE);}
  public void escapeMessage(){
      JOptionPane.showMessageDialog(this, "Has logrado escapar. \tEres una Gallina Espacial.", "Deepspace", JOptionPane.INFORMATION_MESSAGE);
  }
  public void wonCombatMessage(){
    JOptionPane.showMessageDialog(this, "Has GANADO el combate. \tDisfruta de tu botín.", "Deepspace", JOptionPane.INFORMATION_MESSAGE);
  }
  public void wonGameMessage(){
    JOptionPane.showMessageDialog(this, "\n\tHAS GANADO LA PARTIDA", "Deepspace", JOptionPane.INFORMATION_MESSAGE);
  }
  public void conversionMessage(){
      JOptionPane.showMessageDialog(this, "Has GANADO el combate. \nAdemás te has CONVERTIDO. \nDisfruta de tu botín", "Deepspace", JOptionPane.INFORMATION_MESSAGE);
  }
  public void noCombatMessage(){
      JOptionPane.showMessageDialog(this, "No puedes combatir en este momento", "Deepspace", JOptionPane.INFORMATION_MESSAGE);
  }
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCombatir;
    private javax.swing.JButton botonDescartar;
    private javax.swing.JButton botonDescartarHangar;
    private javax.swing.JButton botonEquipar;
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton botonSiguienteTurno;
    private javax.swing.JPanel panelEnemy;
    private javax.swing.JPanel panelPruebas;
    private javax.swing.JPanel panelSpaceStation;
    // End of variables declaration//GEN-END:variables
}
